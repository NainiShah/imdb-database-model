--1)TV SHOW EPISODE TRAILERS AND MEDIA

SELECT TV_SHOW.TV_SHOW_NAME,SEASON.SEASON_NUMBER,EPISODE_NUMBER,EPISODES.EPISODE_NAME,TRAILERS.DURATION, TRAILERS.RELEASE_DATE, PHOTOS, VIDEOS
FROM TRAILERS JOIN EPISODES ON EPISODES.EPISODE_ID = TRAILERS.EPISODE_ID
JOIN SEASON ON SEASON.SEASON_ID = EPISODES.SEASON_ID
JOIN TV_SHOW
ON TV_SHOW.TV_SHOW_ID = SEASON.TV_SHOW_ID
JOIN MEDIA ON MEDIA.TRAILERID = TRAILERS.TRAILERID

--2) MOVIE TRAILERS AND MEDIA

SELECT MOVIE.NAME, TRAILERS.DURATION, MOVIE.RELEASE_DATE AS MOVIE_RELEASE_DATE ,MEDIA.PHOTOS,MEDIA.VIDEOS
FROM TRAILERS JOIN MOVIE
ON TRAILERS.MOVIE_ID = MOVIE.MOVIE_ID
JOIN MEDIA ON TRAILERS.TRAILERID = MEDIA.TRAILERID


-- 3)AWARD WINNERS
SELECT AWARD_NAME, AWARD_CATEGORY, CASE
WHEN NOMINEE.TV_SHOW_ID IS NOT NULL THEN ISNULL(TV_SHOW_NAME,'-') 
WHEN NOMINEE.MOVIE_ID IS NOT NULL THEN ISNULL(NAME,'-') 
WHEN NOMINEE.CAST_ID IS NOT NULL THEN  ISNULL(CONCAT(FIRST_NAME,' ',LAST_NAME),'-')
END AS AWARD_WINNER
FROM AWARD JOIN NOMINEE ON AWARD.AWARD_ID = NOMINEE.AWARD_ID
left JOIN TV_SHOW ON TV_SHOW.TV_SHOW_ID = NOMINEE.TV_SHOW_ID
left JOIN MOVIE ON MOVIE.MOVIE_ID = NOMINEE.MOVIE_ID
left JOIN CAST ON CAST.CAST_ID = NOMINEE.CAST_ID
WHERE IS_WINNER = 1

-- 4)AVERAGE RATING VIEW FOR MOVIES AND TV SHOWS
SELECT AVG(RATING) AS AVG_RATING, CASE
WHEN REVIEW.EPISODE_ID IS NOT NULL THEN ISNULL(TV_SHOW_NAME,'-') 
WHEN REVIEW.MOVIE_ID IS NOT NULL THEN ISNULL(NAME,'-') 
END AS REVIEW_ON, CASE
WHEN REVIEW.EPISODE_ID IS NOT NULL THEN 'TV SHOW' 
WHEN REVIEW.MOVIE_ID IS NOT NULL THEN 'MOVIE' 
END AS REVIEW_TYPE
FROM REVIEW LEFT JOIN MOVIE ON REVIEW.MOVIE_ID = MOVIE.MOVIE_ID
LEFT JOIN EPISODES ON REVIEW.EPISODE_ID = EPISODES.EPISODE_ID
LEFT JOIN SEASON ON SEASON.SEASON_ID = EPISODES.SEASON_ID
LEFT JOIN TV_SHOW ON TV_SHOW.TV_SHOW_ID = SEASON.TV_SHOW_ID
GROUP BY REVIEW.EPISODE_ID,REVIEW.MOVIE_ID, MOVIE.NAME,TV_SHOW_NAME
ORDER BY AVG_RATING DESC, REVIEW_TYPE ASC

--5)MOVIES IN THEATRE

SELECT THEATRE_NAME, SCREEN_NO, MOVIE.NAME, START_TIME, END_TIME
FROM THEATRE JOIN SHOWTIME_BRIDGE ON THEATRE.THEATRE_ID = SHOWTIME_BRIDGE.THEATRE_ID
JOIN MOVIE ON MOVIE.MOVIE_ID = SHOWTIME_BRIDGE.MOVIE_ID 
ORDER BY THEATRE_NAME, SCREEN_NO


--6) GOOFS QUERY
SELECT GOOF_NAME, GOOF_DESCRIPTION, GOOF_TYPE, CASE
WHEN GOOFS.EPISODE_ID IS NOT NULL THEN ISNULL(TV_SHOW_NAME,'-') 
WHEN GOOFS.MOVIE_ID IS NOT NULL THEN ISNULL(MOVIE.NAME,'-') 
END AS GOOF_ON, CASE
WHEN GOOFS.EPISODE_ID IS NOT NULL THEN 'TV SHOW' 
WHEN GOOFS.MOVIE_ID IS NOT NULL THEN 'MOVIE' 
END AS REVIEW_TYPE
FROM GOOFS LEFT JOIN MOVIE ON GOOFS.MOVIE_ID = MOVIE.MOVIE_ID
LEFT JOIN EPISODES ON GOOFS.EPISODE_ID = EPISODES.EPISODE_ID
LEFT JOIN SEASON ON SEASON.SEASON_ID = EPISODES.SEASON_ID
LEFT JOIN TV_SHOW ON TV_SHOW.TV_SHOW_ID = SEASON.TV_SHOW_ID

7)--TRIVIA QUERY

SELECT TRIVIA_NAME, TRIVIA_DESCRIPTION, CASE
WHEN TRIVIA.EPISODE_ID IS NOT NULL THEN ISNULL(TV_SHOW_NAME,'-') 
WHEN TRIVIA.MOVIE_ID IS NOT NULL THEN ISNULL(MOVIE.NAME,'-') 
END AS TRIVIA_ON, CASE
WHEN TRIVIA.EPISODE_ID IS NOT NULL THEN 'TV SHOW' 
WHEN TRIVIA.MOVIE_ID IS NOT NULL THEN 'MOVIE' 
END AS TRIVIA_TYPES
FROM TRIVIA LEFT JOIN MOVIE ON TRIVIA.MOVIE_ID = MOVIE.MOVIE_ID
LEFT JOIN EPISODES ON TRIVIA.EPISODE_ID = EPISODES.EPISODE_ID
LEFT JOIN SEASON ON SEASON.SEASON_ID = EPISODES.SEASON_ID
LEFT JOIN TV_SHOW ON TV_SHOW.TV_SHOW_ID = SEASON.TV_SHOW_ID

